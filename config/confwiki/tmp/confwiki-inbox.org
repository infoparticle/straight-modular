#+TITLE: ConfWiki Inbox
#+Last Saved: <2019-August-29 11:18:04>


** Mode-line
https://occasionallycogent.com/custom_emacs_modeline/index.html

https://dev.to/gonsie/beautifying-the-mode-line-3k10

Colors: https://www.colorhexa.com/0000ff

*** size
#+BEGIN_SRC emacs-lisp
(set-face-attribute 'mode-line nil
                    :background "#353644"
                    :foreground "white"
                    :box '(:line-width 8 :color "#353644")
                    :overline nil
                    :underline nil)

(set-face-attribute 'mode-line-inactive nil
                    :background "#565063"
                    :foreground "white"
                    :box '(:line-width 8 :color "#565063")
                    :overline nil
                    :underline nil)
#+END_SRC

*** vc background
#+BEGIN_SRC emacs-lisp
(defun vc-branch ()
  (let ((backend (vc-backend buffer-file-name)))
    (substring vc-mode (+ (if (eq backend 'Hg) 2 3) 2))))
(vc-branch)

develop
#+END_SRC

**** Raw code from .emacs.d
https://github.com/gonsie/dotfiles/blob/master/emacs/theme.el#L75
#+BEGIN_SRC emacs-lisp

(setq-default mode-line-format
              (list
               ;; day and time
               '(:eval (propertize (format-time-string " %b %d %H:%M ")
                                   'face 'font-lock-builtin-face))


               '(:eval (propertize (substring vc-mode 5)
                                   'face 'font-lock-comment-face))

               ;; the buffer name; the file name as a tool tip
               '(:eval (propertize " %b "
                                   'face
                                   (let ((face (buffer-modified-p)))
                                     (if face 'font-lock-warning-face
                                       'font-lock-type-face))
                                   'help-echo (buffer-file-name)))

               ;; line and column
               " (" ;; '%02' to set to 2 chars at least; prevents flickering
               (propertize "%02l" 'face 'font-lock-keyword-face) ","
               (propertize "%02c" 'face 'font-lock-keyword-face)
               ") "

               ;; relative position, size of file
               " ["
               (propertize "%p" 'face 'font-lock-constant-face) ;; % above top
               "/"
               (propertize "%I" 'face 'font-lock-constant-face) ;; size
               "] "

               ;; spaces to align right
               '(:eval (propertize
                " " 'display
                `((space :align-to (- (+ right right-fringe right-margin)
                                      ,(+ 3 (string-width mode-name)))))))

               ;; the current major mode
               (propertize " %m " 'face 'font-lock-string-face)
               ;;minor-mode-alist
               ))

(set-face-attribute 'mode-line nil
                    :background "#353644"
                    :foreground "white"
                    :box '(:line-width 8 :color "#353644")
                    :overline nil
                    :underline nil)

(set-face-attribute 'mode-line-inactive nil
                    :background "#565063"
                    :foreground "white"
                    :box '(:line-width 8 :color "#565063")
                    :overline nil
                    :underline nil)
#+END_SRC
*** Right justifcy
#+BEGIN_SRC emacs-lisp
'(:eval (propertize
         " " 'display
         `((space :align-to (- (+ right right-fringe right-margin)
                               ,(+ 3 (string-width mode-name)))))))
#+END_SRC
** unicode

http://xahlee.info/comp/a_emoji_tale.html
http://ergoemacs.org/emacs/emacs_n_unicode.html

** Full text search on org files

*** Lucene lisp!                                                                          :useful:promising:

http://rudolfochrist.github.io/blog/2015/08/19/on-indexing-org-files/

Looks promising and complete solution!

- mdfind

https://www.cliki.net/Montezuma

*** recoll                                                                                :related:
https://oremacs.com/2015/07/27/counsel-recoll/

*** full-text-search to website                                                           :related:
https://medium.com/dev-channel/how-to-add-full-text-search-to-your-website-4e9c80ce2bf4

**** lunr.js
https://lunrjs.com/guides/core_concepts.html

** leaf.el - another package manger like use-package
https://github.com/conao3/leaf.el

** reveal.js + ox-reveal excellent presentation from org mode
https://opensource.com/article/18/2/how-create-slides-emacs-org-mode-and-revealjs

https://github.com/FormidableLabs/spectacle 7.8 Stars!

** emacs fringes and margins
(set-window-margins)
(set-window-margins WINDOW LEFT-WIDTH &optional RIGHT-WIDTH)

(with-current-buffer (window-buffer WINDOW))

list of [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Standard-Hooks.html][hooks]]


(defun my-set-margins ()
  "Set margins in current buffer."
  (setq left-margin-width 24)
  (setq right-margin-width 24))
 

  
** contribute to page-break (2019-08-25 Sun)

added this to fix the page-break.el!
#+begin_src emacs-lisp
(width (if (boundp 'left-margin)
           (- width left-margin)
         width))
(width (if (boundp 'right-margin)
           (- width right-margin)
         width))
#+end_src
* scratch

https://ternjs.net/  - intelligent javascript editor!
 
(straight-use-package 'el-patch)

(setq initial-buffer-choice 'counsel-recentf) 
